package com.example.securityapp;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.MutableData;
import com.google.firebase.database.Transaction;

import java.util.ArrayList;
import java.util.Collections;

public class industry_standards_questions extends AppCompatActivity {

    DatabaseReference databaseUsers;
    FirebaseDatabase database = FirebaseDatabase.getInstance();
    FirebaseAuth mAuth;
    TextView stmnt;
    ImageView image_true, image_false;
    Button points, finished;
    Statements tfStatements;
    int statementsLength;
    ArrayList<Item> statementList;
    int currentStatement = 0;
    int grade = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_industry_standards_questions);

        databaseUsers = database.getReference("Users");
        mAuth = FirebaseAuth.getInstance();
        FirebaseUser user = mAuth.getCurrentUser();
        stmnt = (TextView) findViewById(R.id.statement_TV);
        image_true = (ImageView) findViewById(R.id.trueImage);
        image_true.setFocusable(false);
        image_false = (ImageView) findViewById(R.id.falseImage);
        image_false.setFocusable(false);
        tfStatements = new Statements();
        statementsLength = tfStatements.tfStatements.length;
        statementList = new ArrayList<>();
        finished = (Button) findViewById(R.id.finish);
        points = (Button) findViewById(R.id.final_score);
        for (int i = 0; i < statementsLength; i++) {
            statementList.add(new Item(tfStatements.getStatement(i), tfStatements.getAnswer(i)));
        }
        Collections.shuffle(statementList);
        setStmnt(currentStatement);

    }

    // show Statement
    private void setStmnt(int number) {
        stmnt.setText(statementList.get(number).getStatement());
    }

    //check is answer is right
    private boolean checkAnswer(int number) {
        String answer = statementList.get(number).getAnswer();
        return answer.equals("true");
    }

    public void trueClicked(View view) {
        if (checkAnswer(currentStatement)) {
            grade++;
             }
            currentStatement++;
            if (currentStatement >= statementsLength) {
                score();
                return;
            }
            if (currentStatement <= statementsLength )
                setStmnt(currentStatement);
        }

    public void falseClicked(View view) {
        if (!checkAnswer(currentStatement)) {
            grade++;
             }
            currentStatement++;
        if (currentStatement >= statementsLength) {
            score();
            return;
        }
        if (currentStatement <= statementsLength )
            setStmnt(currentStatement);
    }

    public void score() {

        String id = mAuth.getCurrentUser().getUid();
        DatabaseReference score = databaseUsers.child(id).child("score");

        final int pointsEarned = grade;
        score.runTransaction(new Transaction.Handler() {
            @Override
            public Transaction.Result doTransaction(MutableData mutableData) {
                System.out.println("You scored: " + pointsEarned);
                System.out.println("The current score is: " + mutableData.getValue(Integer.class));
                mutableData.setValue((mutableData.getValue() == null ? 0 : mutableData.getValue(Integer.class)) + pointsEarned);                        System.out.println("The new score is: " + mutableData.getValue(Integer.class));
                return Transaction.success(mutableData);
            }

            @Override
            public void onComplete(@Nullable DatabaseError databaseError, boolean b, @Nullable DataSnapshot dataSnapshot) {

            }
        });
        Toast.makeText(this, "You scored " + grade + " points!", Toast.LENGTH_LONG).show();
        grade = 0;
    }



    public void FinishedOnClick (View view)
    {
        Intent intent_finished = new Intent(industry_standards_questions.this, industry_standards_rating_screen.class);
        startActivity(intent_finished);
        finish();
    }


}

