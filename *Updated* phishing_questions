package com.example.securityapp;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.content.Context;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.MutableData;
import com.google.firebase.database.Transaction;

public class phishing_questions extends AppCompatActivity {

    CheckBox financial, kindness, humour, postal, virtual, electronic, grammar, urgency, accuracy, highLevel, lowLevel, all, email, text, coldcall;
    Button score, finished;
    ProgressBar questionProgress;
    DatabaseReference databaseUsers;
    FirebaseDatabase database = FirebaseDatabase.getInstance();
    FirebaseAuth mAuth;


    int grade = 0;
    int progress = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_phishing_questions);

        questionProgress = (ProgressBar) findViewById(R.id.progress_bar);
        questionProgress.setMax(5);
        questionProgress.setProgress(0);

        final Context currentContext = this;
        finished = (Button) findViewById(R.id.finish);
        score = (Button) findViewById(R.id.final_score);
        databaseUsers = database.getReference("Users");
        mAuth = FirebaseAuth.getInstance();
        FirebaseUser user = mAuth.getCurrentUser();


        score.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (financial.isChecked()) grade++;

                if (electronic.isChecked()) grade++;

                if (urgency.isChecked()) grade++;

                if (highLevel.isChecked()) grade++;

                if (text.isChecked()) grade++;



                String id = mAuth.getCurrentUser().getUid();
                DatabaseReference score = databaseUsers.child(id).child("score");

                final int pointsEarned = grade;
                score.runTransaction(new Transaction.Handler() {
                    @Override
                    public Transaction.Result doTransaction(MutableData mutableData) {
                        System.out.println("You scored: " + pointsEarned);
                        System.out.println("The current score is: " + mutableData.getValue(Integer.class));
                        mutableData.setValue((mutableData.getValue() == null ? 0 : mutableData.getValue(Integer.class)) + pointsEarned);                        System.out.println("The new score is: " + mutableData.getValue(Integer.class));
                        return Transaction.success(mutableData);
                    }

                    @Override
                    public void onComplete(@Nullable DatabaseError databaseError, boolean b, @Nullable DataSnapshot dataSnapshot) {

                    }
                });
                Toast.makeText(getApplicationContext(), "You scored " + grade + " points!", Toast.LENGTH_LONG).show();
                grade = 0;
            }
        });


        financial = (CheckBox) findViewById(R.id.financial_gain_checkbox);
        kindness = (CheckBox) findViewById(R.id.kindness_checkbox);
        humour = (CheckBox) findViewById(R.id.humour_checkbox);
        postal = (CheckBox) findViewById(R.id.postal_checkbox);
        virtual = (CheckBox) findViewById(R.id.virtual_checkbox);
        electronic = (CheckBox) findViewById(R.id.electronic_checkbox);
        grammar = (CheckBox) findViewById(R.id.good_grammar_checkbox);
        urgency = (CheckBox) findViewById(R.id.urgency_checkbox);
        accuracy = (CheckBox) findViewById(R.id.accuracy_checkbox);
        highLevel = (CheckBox) findViewById(R.id.high_level_checkbox);
        lowLevel = (CheckBox) findViewById(R.id.low_level_checkbox);
        all = (CheckBox) findViewById(R.id.all_employees_checkbox);
        email = (CheckBox) findViewById(R.id.via_email_checkbox);
        text = (CheckBox) findViewById(R.id.via_text_checkbox);
        coldcall = (CheckBox) findViewById(R.id.via_coldcalls_checkbox);
    }

    public void questionOneProgress() {
        if (financial.isChecked()) questionProgress.setProgress(progress++);
        else if (kindness.isChecked()) questionProgress.setProgress(progress++);
        else if (humour.isChecked()) questionProgress.setProgress(progress++);
    }

    public void FinishedOnClick (View view)
    {
        finished.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent intent_finished = new Intent(phishing_questions.this, phishing_rating_screen.class);
                startActivity(intent_finished);
                finish();
            }
        });
    }

}
