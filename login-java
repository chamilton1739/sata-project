package com.example.securityapp;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class login extends AppCompatActivity
        //implements View.OnClickListener
    {
        Button signUp;
        Button login;
        EditText etEmail;
        EditText etPassword;
        ProgressBar bar;
        FirebaseAuth mAuth;


        @Override
        protected void onCreate(Bundle savedInstanceState)
        {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_login);

            signUp = (Button) findViewById(R.id.signUp_button);
            login = (Button) findViewById(R.id.login_button);
            etEmail = (EditText)findViewById(R.id.email_input);
            etPassword = (EditText)findViewById(R.id.password_input);
            bar = (ProgressBar) findViewById(R.id.progressBar);
            bar.setVisibility(View.GONE);
            mAuth = FirebaseAuth.getInstance();
        }

        @Override
        public void onStart()
        {
            super.onStart();
            // Check if user is signed in (non-null) and update UI accordingly.
            FirebaseUser currentUser = mAuth.getCurrentUser();
        }

        //Code taken from https://firebase.google.com/docs/auth/android/password-auth on 06/11/2019
        public void loginUser()
        {
            final String email = etEmail.getText().toString();
            String password = etPassword.getText().toString();

            if(email.isEmpty()&&password.isEmpty())
            {
                Toast.makeText(login.this, "Email and password cannot be empty.",
                        Toast.LENGTH_SHORT).show();
                bar.setVisibility(View.GONE);
            }else if(email.isEmpty())
            {
                Toast.makeText(login.this, "Email cannot be empty.",
                        Toast.LENGTH_SHORT).show();
                bar.setVisibility(View.GONE);
            }else if(password.isEmpty())
            {
                Toast.makeText(login.this, "Password cannot be empty.",
                        Toast.LENGTH_SHORT).show();
                bar.setVisibility(View.GONE);
            }else

                mAuth.signInWithEmailAndPassword(email, password)
                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                            @Override
                            public void onComplete(@NonNull Task<AuthResult> task) {
                                if (task.isSuccessful())
                                {
                                    //Log.d(TAG, "signInWithEmail:success");
                                    // FirebaseUser user = mAuth.getCurrentUser();
                                    bar.setVisibility(View.VISIBLE);
                                    Intent intent_home = new Intent(login.this, home.class);
                                    startActivity(intent_home);
                                    finish();
                                    Toast.makeText(login.this, "Login successful",
                                            Toast.LENGTH_SHORT).show();
                                    //updateUI(user);
                                } else {
                                    // If sign in fails, display a message to the user.
                                    //Log.w(TAG, "signInWithEmail:failure", task.getException());
                                    Toast.makeText(login.this, "Incorrect Email or Password.",
                                            Toast.LENGTH_SHORT).show();
                                    bar.setVisibility(View.GONE);

                                    //updateUI(null);
                                }

                                // ...
                            }
                        });
            }





        public void loginOnClick (View view)
{
    login.setOnClickListener(new View.OnClickListener()
    {
        @Override
        public void onClick(View v)
        {
            bar.setVisibility(View.VISIBLE);
            loginUser();

        }
    });
}

        public void RegisterOnClick (View view)
        {
            signUp.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View v)
                {
                    Intent intent_reg = new Intent(login.this, register.class);
                    startActivity(intent_reg);
                    finish();
                }
            });
        }


}
